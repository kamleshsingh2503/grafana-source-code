import { DynamicConfigValue, FieldConfig, DataFrame, FieldOverrideContext, ApplyFieldOverrideOptions } from '../types';
import { FieldConfigOptionsRegistry } from './FieldConfigOptionsRegistry';
interface GlobalMinMax {
    min: number;
    max: number;
}
export declare function findNumericFieldMinMax(data: DataFrame[]): GlobalMinMax;
/**
 * Return a copy of the DataFrame with all rules applied
 */
export declare function applyFieldOverrides(options: ApplyFieldOverrideOptions): DataFrame[];
export interface FieldOverrideEnv extends FieldOverrideContext {
    fieldConfigRegistry: FieldConfigOptionsRegistry;
}
export declare function setDynamicConfigValue(config: FieldConfig, value: DynamicConfigValue, context: FieldOverrideEnv): void;
export declare function setFieldConfigDefaults(config: FieldConfig, defaults: FieldConfig, context: FieldOverrideEnv): void;
/**
 * This checks that all options on FieldConfig make sense.  It mutates any value that needs
 * fixed.  In particular this makes sure that the first threshold value is -Infinity (not valid in JSON)
 */
export declare function validateFieldConfig(config: FieldConfig): void;
export {};
